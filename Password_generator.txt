import random
from tkinter import*    #importing GUI module
from PIL import Image, ImageTk
import string

main_window = Tk()
main_window.geometry("550x600")
main_window.minsize(500,500)
main_window.maxsize(560,700)
main_window.title("P A S S W O R D Generator")

# Adding JPG image on GUI window #
image = Image.open("password_image_1.jpg")
photo = ImageTk.PhotoImage(image)
photo_lebel = Label(image = photo)
photo_lebel.pack()

# Adding a text using Label from tkinter #
label = Label(text = "Choose Strength of Password",bg="blue",fg="white",padx=5,pady=10,font=("Helvetica",12,"bold"))
label.pack()

def selection():
    selection = choice.get()

choice = IntVar()

# Adding RadioButtons #
R1 = Radiobutton(main_window,text = "POOR",variable = choice,value = 1,command=selection)
R2 = Radiobutton(main_window,text = "AVERAGE",variable = choice,value = 2,command = selection)
R3 = Radiobutton(main_window,text = "STRONG",variable = choice,value = 3,command = selection)
R1.pack()
R2.pack()
R3.pack()

password_length = Label(text = "<---Enter Password Length--->").pack()

# Inserting Spinbox #
val = IntVar()
spin_length = Spinbox(main_window,from_= 8, to_=15,text = val,width = 15)
spin_length.pack()

# for Button #
def callback():
    lsum.config(text = passgen())
passgenButton = Button(main_window,text = "G E N E R A T E",bd=6,height=1,command = callback,pady = 1,bg="pink",font=("cursive",8,"bold"),borderwidth=6,relief=RAISED)
passgenButton.pack()
password = str(callback)

lsum = Label(main_window,text = "",pady=20,font=("bold",19))
lsum.pack(side= BOTTOM)

# random password generation Logic #
poor = (string.ascii_uppercase) + (string.ascii_lowercase)
average = poor + string.digits
strong = average + string.punctuation

def passgen():
    if choice.get() == 1:
        string_password_poor = "".join(random.sample(poor, val.get()))
        return string_password_poor
    elif choice.get() == 2:
        string_password_avg = "".join(random.sample(average, val.get()))
        return string_password_avg
    elif choice.get() == 3:
        string_password_strong = "".join(random.sample(strong, val.get()))
        return string_password_strong

main_window.mainloop()